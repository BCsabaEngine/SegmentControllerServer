doctype html
html(lang='en')
  include include/head.pug
  body(style=`overflow: hidden; background-color: ${backColor}`)
    include include/scripts.pug

    .dropdown
      button#menu.btn.btn-secondary.opacity75(type='button' data-bs-toggle='dropdown' style='position:absolute; left:8px; top:8px;')
        img.rounded-circle(src='/public/favicon/favicon-32x32.png' width='32px')
        | 
        | Menu
        | 
        i.ws-indicator.bi-lightning-fill
      ul.dropdown-menu()
        li.ws-indicator
          h3.dropdown-header.ws-indicator
            | Websocket error!
          hr.dropdown-divider.text-secondary
        li
          h3.dropdown-header.text-success
            | Hello RAILMAN!
        li
          a.dropdown-item.hidden(href='#')
            i.bi.bi-people-fill
            |
            | Guest users
        li
          a.dropdown-item(href='/editor/layout')
            i.bi.bi-layers
            | 
            | Layout editor
        li
          a.dropdown-item.disabled(href='#')
            i.bi.bi-hdd-network-fill
            | 
            | Segment network
        li
          a.dropdown-item.disabled(href='#')
            i.bi.bi-joystick
            | 
            | Z21
        li
          hr.dropdown-divider
        li
          a.dropdown-item.small.disabled(href='#')
            i.bi.bi-wrench
            | 
            | Tools
        li
          a.dropdown-item.small.disabled(href='#')
            i.bi.bi-gear-fill
            | 
            | Settings

    #bg
      a.btn.btn-success(style='position:absolute; left:400px; top:140px' onclick='alert("xxx")') xxx

  style.
    #bg {
      background-image: url('/layout/background?last=#{layoutLastModify}');
      background-position: 0 0;
      background-repeat: no-repeat;
      background-color: transparent;
      border: 0;
      position: absolute;
      top: 0px;
      left: 0px;
      width: #{backgroundSize.width}px;
      height: #{backgroundSize.height}px;
      z-index: -1;
    }

  script(type='text/javascript').
    ws_channels =
    {
      layoutchange: function() { pagereload() }
    }

    function ws_onreceive(data) {
      console.log(data);
    }

    let imgw = #{backgroundSize.width}
    let imgh = #{backgroundSize.height}

    $(document).ready(function () {
      var $bg = $('#bg'),
        origin = { x: 0, y: 0 },
        start = { x: 0, y: 0 },
        movecontinue = false;

      function Move(e) {
        if (e.type == 'touchmove') {
          e.clientX = Math.round(e.touches[0].clientX);
          e.clientY = Math.round(e.touches[0].clientY);
        }

        var moveby = {
          x: origin.x - e.clientX,
          y: origin.y - e.clientY
        };

        if (movecontinue === true) {
          if (!isNaN(moveby.x))
            start.x = start.x - moveby.x;
          if (!isNaN(moveby.y))
            start.y = start.y - moveby.y;

          if (start.x > 0)
            start.x = 0;
          if (start.y > 0)
            start.y = 0;

          if (start.x < window.innerWidth - imgw)
            start.x = window.innerWidth - imgw;
          if (start.y < window.innerHeight - imgh)
            start.y = window.innerHeight - imgh;

          $(this).css('top', start.y + 'px');
          $(this).css('left', start.x + 'px');
        }
        if (!isNaN(e.clientX))
          origin.x = e.clientX;
        if (!isNaN(e.clientY))
          origin.y = e.clientY;

        e.stopPropagation();
        return false;
      }

      function Handle(e) {
        movecontinue = false;
        $bg.unbind('mousemove touchmove', Move);

        if (e.type == 'mousedown' || e.type == 'touchstart') {
          origin.x = e.clientX;
          origin.y = e.clientY;
          movecontinue = true;
          $bg.bind('mousemove touchmove', Move);
        } else {
          $(document.body).focus();
        }
        //e.stopPropagation();
        //return false;
      }

      let eventcount = 0
      function HandleDouble(e) {
        eventcount++
        if (eventcount >= 2)
          Reset()
        setTimeout(() => { eventcount = 0 }, 350)
      }

      function Reset() {
        start = { x: 0, y: 0 };
        $('#bg').animate({ top: 0, left: 0 }, 'fast');
      }

      function InitBySize()
      {
        if (imgw < window.innerWidth && imgh < window.innerHeight)
        {
          $bg.unbind('mousedown mouseup mouseleave touchstart touchend touchcancel', Handle);
          $bg.unbind('mouseup touchend', HandleDouble);
          $('#bg').animate({ left: (window.innerWidth - imgw) / 2, top: (window.innerHeight - imgh) / 2 }, 'fast')
        }
        else
        {
          $bg.bind('mousedown mouseup mouseleave touchstart touchend touchcancel', Handle);
          $bg.bind('mouseup touchend', HandleDouble);
          Reset()
        }
      }
      $(window).resize(InitBySize)
      InitBySize()
    });
